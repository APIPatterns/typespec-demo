{
  "openapi": "3.0.0",
  "info": {
    "title": "Widget Service",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Widgets"
    },
    {
      "name": "Gadgets"
    },
    {
      "name": "WingDing"
    }
  ],
  "paths": {
    "/gadgets": {
      "get": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Gadget"
                      },
                      "x-typespec-name": "Gadget[]",
                      "description": "List of elements"
                    },
                    "nextLink": {
                      "type": "string",
                      "format": "uri",
                      "description": "A link to the next page of results if present."
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "x-typespec-name": "List<Gadget>"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gadgets/{id}": {
      "get": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gadget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gadget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GadgetCreateOrUpdate"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gadget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxRPM": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "color": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Yellow"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Green"
                        ]
                      }
                    ],
                    "x-typespec-name": "Color.Yellow | Color.Green"
                  },
                  "manufacturer": {
                    "$ref": "#/components/schemas/ManufacturerUpdate"
                  }
                },
                "x-typespec-name": "MergePatch<Gadget>"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gadgets/{id}/analyze": {
      "post": {
        "tags": [
          "Gadgets"
        ],
        "operationId": "GadgetsInterface_analyze",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/widgets": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Widget"
                      },
                      "x-typespec-name": "Widget[]",
                      "description": "List of elements"
                    },
                    "nextLink": {
                      "type": "string",
                      "format": "uri",
                      "description": "A link to the next page of results if present."
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "x-typespec-name": "List<Widget>"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/widgets/{id}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetCreateOrUpdate"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "color": {
                    "$ref": "#/components/schemas/widgetColors"
                  },
                  "manufacturer": {
                    "$ref": "#/components/schemas/ManufacturerUpdate"
                  }
                },
                "x-typespec-name": "MergePatch<Widget>"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/widgets/{id}/analyze": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "operationId": "WidgetsInterface_analyze",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/wingdings": {
      "get": {
        "tags": [
          "WingDing"
        ],
        "operationId": "WingDingInterface_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WingDing"
                      },
                      "x-typespec-name": "WingDing[]",
                      "description": "List of elements"
                    },
                    "nextLink": {
                      "type": "string",
                      "format": "uri",
                      "description": "A link to the next page of results if present."
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "x-typespec-name": "List<WingDing>"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/wingdings/{id}": {
      "get": {
        "tags": [
          "WingDing"
        ],
        "operationId": "WingDingInterface_read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WingDing"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WingDing"
        ],
        "operationId": "WingDingInterface_create",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WingDing"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WingDingCreateOrUpdate"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WingDing"
        ],
        "operationId": "WingDingInterface_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WingDing"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "height": {
                    "type": "number",
                    "format": "float"
                  },
                  "width": {
                    "type": "number",
                    "format": "float"
                  },
                  "color": {
                    "$ref": "#/components/schemas/Color"
                  },
                  "manufacturer": {
                    "$ref": "#/components/schemas/ManufacturerUpdate"
                  }
                },
                "x-typespec-name": "MergePatch<WingDing>"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WingDing"
        ],
        "operationId": "WingDingInterface_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "required": true,
                "description": "A server-defined code that uniquely identifies the error.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiVersion": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "The version of the API in the form YYYY-MM-DD"
          }
        },
        "required": [
          "apiVersion"
        ]
      },
      "BaseThingymajig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "color": {
            "$ref": "#/components/schemas/Color"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/Manufacturer"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that the resource was created",
            "readOnly": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that the resource was last updated",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "manufacturer",
          "createdOn",
          "updatedOn"
        ]
      },
      "BaseThingymajigCreateOrUpdate": {
        "type": "object",
        "properties": {
          "color": {
            "$ref": "#/components/schemas/Color"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/Manufacturer"
          }
        },
        "required": [
          "manufacturer"
        ]
      },
      "Color": {
        "type": "string",
        "enum": [
          "Red",
          "Yellow",
          "Purple",
          "Green",
          "Orange",
          "Blue"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            ],
            "description": "Top-level error object"
          }
        },
        "description": "Error response",
        "required": [
          "error"
        ]
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A server-defined code that uniquely identifies the error."
          },
          "message": {
            "type": "string",
            "description": "A human-readable representation of the error."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "x-typespec-name": "ErrorDetail[]",
            "description": "An array of details about specific errors that led to this reported error."
          }
        },
        "description": "Error details",
        "required": [
          "code",
          "message"
        ]
      },
      "Gadget": {
        "type": "object",
        "properties": {
          "maxRPM": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Yellow"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "Green"
                ]
              }
            ],
            "x-typespec-name": "Color.Yellow | Color.Green"
          }
        },
        "required": [
          "maxRPM"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajig"
          }
        ]
      },
      "GadgetCreateOrUpdate": {
        "type": "object",
        "properties": {
          "maxRPM": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Yellow"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "Green"
                ]
              }
            ],
            "x-typespec-name": "Color.Yellow | Color.Green"
          }
        },
        "required": [
          "maxRPM"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajigCreateOrUpdate"
          }
        ]
      },
      "Manufacturer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "address"
        ]
      },
      "ManufacturerUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "ResourceMetadata": {
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that the resource was created",
            "readOnly": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that the resource was last updated",
            "readOnly": true
          }
        },
        "description": "Common metadata for resources",
        "required": [
          "createdOn",
          "updatedOn"
        ]
      },
      "Widget": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "$ref": "#/components/schemas/widgetColors"
          }
        },
        "required": [
          "weight"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajig"
          }
        ]
      },
      "WidgetCreateOrUpdate": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "$ref": "#/components/schemas/widgetColors"
          }
        },
        "required": [
          "weight"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajigCreateOrUpdate"
          }
        ]
      },
      "WingDing": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "format": "float"
          },
          "width": {
            "type": "number",
            "format": "float"
          },
          "color": {
            "$ref": "#/components/schemas/Color"
          }
        },
        "required": [
          "height",
          "width"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajig"
          }
        ]
      },
      "WingDingCreateOrUpdate": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "format": "float"
          },
          "width": {
            "type": "number",
            "format": "float"
          },
          "color": {
            "$ref": "#/components/schemas/Color"
          }
        },
        "required": [
          "height",
          "width"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseThingymajigCreateOrUpdate"
          }
        ]
      },
      "widgetColors": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Red"
            ]
          },
          {
            "type": "string",
            "enum": [
              "Blue"
            ]
          }
        ]
      }
    }
  }
}
