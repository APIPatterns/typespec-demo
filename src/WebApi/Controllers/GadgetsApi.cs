/*
 * Widget Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using WebApi.Models;
using System.Net;
using System.Reflection;

namespace WebApi.Functions
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public partial class GadgetsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="gadgetCreate"></param>
        /// <response code="200">The request has succeeded.</response>
        /// <response code="0">An unexpected error response.</response>
        [HttpPost]
        [Route("gadgets")]
        [Consumes("application/json")]
        public IActionResult GadgetsInterfaceCreateGadget([FromBody]GadgetCreate gadgetCreate)
        {
            var method = this.GetType().GetMethod("_GadgetsInterfaceCreateGadget", BindingFlags.NonPublic | BindingFlags.Instance);
            if(method == null)
            {
                return new StatusCodeResult((int)HttpStatusCode.NotImplemented);
            }
            return (ActionResult)method.Invoke(this, new object[] { gadgetCreate });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <param name="apiVersion">The version of the API in the form YYYY-MM-DD</param>
        /// <response code="204">There is no content to send for this request, but the headers may be useful. </response>
        /// <response code="0">An unexpected error response.</response>
        [HttpDelete]
        [Route("gadgets/{id}")]
        public IActionResult GadgetsInterfaceDeleteGadget(string id, [FromQuery][Required()]string apiVersion)
        {
            var method = this.GetType().GetMethod("_GadgetsInterfaceDeleteGadget", BindingFlags.NonPublic | BindingFlags.Instance);
            if(method == null)
            {
                return new StatusCodeResult((int)HttpStatusCode.NotImplemented);
            }
            return (ActionResult)method.Invoke(this, new object[] { id, apiVersion });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <param name="apiVersion">The version of the API in the form YYYY-MM-DD</param>
        /// <response code="200">The request has succeeded.</response>
        /// <response code="0">An unexpected error response.</response>
        [HttpGet]
        [Route("gadgets/{id}")]
        public IActionResult GadgetsInterfaceGetGadgetById(string id, [FromQuery][Required()]string apiVersion)
        {
            var method = this.GetType().GetMethod("_GadgetsInterfaceGetGadgetById", BindingFlags.NonPublic | BindingFlags.Instance);
            if(method == null)
            {
                return new StatusCodeResult((int)HttpStatusCode.NotImplemented);
            }
            return (ActionResult)method.Invoke(this, new object[] { id, apiVersion });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="apiVersion">The version of the API in the form YYYY-MM-DD</param>
        /// <response code="200">The request has succeeded.</response>
        /// <response code="0">An unexpected error response.</response>
        [HttpGet]
        [Route("gadgets")]
        public IActionResult GadgetsInterfaceGetGadgets([FromQuery][Required()]string apiVersion)
        {
            var method = this.GetType().GetMethod("_GadgetsInterfaceGetGadgets", BindingFlags.NonPublic | BindingFlags.Instance);
            if(method == null)
            {
                return new StatusCodeResult((int)HttpStatusCode.NotImplemented);
            }
            return (ActionResult)method.Invoke(this, new object[] { apiVersion });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <param name="apiVersion">The version of the API in the form YYYY-MM-DD</param>
        /// <param name="gadgetsInterfaceUpdateGadgetRequest"></param>
        /// <response code="200">The request has succeeded.</response>
        /// <response code="0">An unexpected error response.</response>
        [HttpPatch]
        [Route("gadgets/{id}")]
        [Consumes("application/merge-patch+json")]
        public IActionResult GadgetsInterfaceUpdateGadget(string id, [FromQuery][Required()]string apiVersion, [FromBody]GadgetsInterfaceUpdateGadgetRequest gadgetsInterfaceUpdateGadgetRequest)
        {
            var method = this.GetType().GetMethod("_GadgetsInterfaceUpdateGadget", BindingFlags.NonPublic | BindingFlags.Instance);
            if(method == null)
            {
                return new StatusCodeResult((int)HttpStatusCode.NotImplemented);
            }
            return (ActionResult)method.Invoke(this, new object[] { id, apiVersion, gadgetsInterfaceUpdateGadgetRequest });
        }
    }
}